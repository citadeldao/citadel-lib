// import { generateContext } from './functions'

export const signTxByPrivateKey = async (rawTransaction, privateKey) => {
  // dynamic import of large module (for fast init)
  console.log('test-tx',rawTransaction);
  const { Ed25519Keypair } = await import('@mysten/sui.js');
  const { fromB64, toB64 } = await import('@mysten/bcs');
  const keypair = Ed25519Keypair.fromSecretKey(fromB64(Buffer.from(privateKey.slice(2),'hex').toString('base64')))
  const signature = toB64(keypair.signData(fromB64(rawTransaction)));
  console.log('test-signature',signature);
  // const { default: nacl } = await import('tweetnacl')
  // const isValid = nacl.sign.detached.verify(
  //   fromB64(rawTransaction),
  //   signature,
  //   keypair.getPublicKey().toBytes(),
  // );
  // console.log('test-valid',isValid);
  // let signedTx = await signature.signSigned(signer, context, rawTransaction)
  return {
    tx: rawTransaction,
    signature
  }

  // 848540
  // 0x4f5993f332c8af2af2452ac2c13b7cb427a778ad34e49bc04084b270dd01f12a
  // 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
}
